{"title":"Материалы курса","markdown":{"yaml":{"title":"Материалы курса"},"headingText":"Лекция 1: Введение в R и RStudio","headingAttr":{"id":"sec-l1","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n- Знакомство\n- Почему R\n- План модуля\n\n- R как калькулятор, операторы\n- Функции\n- Присвоение переменных\n- Векторы\n- Векторизация\n- Ресайклинг\n\n```{r}\n#| eval: false\n#| echo: true\n# Арифметические операторы ------------------------------------------------\n\n1 - 1 #это комментарий\n# 2 + 2 \n3 * 3\n4 / 4\n5 ^ 5\n(2 + 2) * 2\n\n# Функции -----------------------------------------------------------------\n\nabs(-10)\n?abs\nround(pi)\n?round\nround(pi, 4)\nround(x = pi, digits = 4)\n\n# Присвоение переменных ---------------------------------------------------\na <- 3\na <- 4\na\nb <- -4\nb\n\nabs(b)\n\na == abs(b)\n\na == b\na != b\n# Векторы -----------------------------------------------------------------\n\nc(a, b)\nc(a, b) #ошибка, потому что с написано кириллицей!\n-10:3\n3:-10\n\nage <- c(30, 20, 35, 27, 32)\nage\n\nage[1]\nlength(age)\nage[length(age)]\n\nage[1] <- 25\nage\nage[2:3]\n\nage[2, 3] #не работает\nage[c(2, 3)] # работает\n\n## Задание\n## верните первый и четвертый элемент вектора age\nage[c(1, 4)]\n\nsum(age)\nmean(age)\nmin(age)\nmax(age)\n\nage_of_work <- c(20, 18, 25, 20, 20)\n## Задание: посчитать сумму, среднее, минимум и максимум для age_of_work\n\n# Векторизация ------------------------------------------------------------\nage <- c(25, 20, 35, 27, 32)\n\nage - age_of_work\n\nage * age_of_work\nage ^ age_of_work #большие числа --> научная запись числа\n\n#3.486784e+29 = 10 ^ 29 * 3.486784\n\npi / 1000000 \n\n#маленькие числа --> тоже научная запись числа\n#3.141593e-06 = 10 ^ -6 * 3.141593\n\noptions(scipen = 999) #отключаем научную запись числа\nage ^ age_of_work\npi / 1000000 \n\n# Задание: Создайте вектор 1^1 2^2 3^3 4^4 5^5\n\n\n-2:2\nabs(-2:2)\nlog(age)\nsin(age)\n\nage > 25\nage >= 25\n\n# Ресайклинг -------------------------------------------------------------\n\nn <- 1:4 \nk <- c(10, 100)\nn * k\nn * 10\n\nage * 365\n\n# Задание: Посчитайте количество секунд в age\n\n# Индексирование векторов -------------------------------------------------\nage\nage[age > 25]\nage[age >= 25]\nage[age == 25]\nage[age != 25]\n\nmean(age)\nage[c(1, 3, 5)]\nage[c(TRUE, FALSE, TRUE, FALSE, TRUE)]\nage[age > mean(age)]\n\nage[age < 0]\n## Задание: верните значения выше среднего из age_of_work\n## верните значения ниже среднего из age_of_work\n```\n\n## Семинар 1: Введение в R и RStudio {#sec-s1}\n\n### Решение заданий на создание векторов\n\n-   Создайте вектор из значений 2, 30 и 4000.\n\n```{r}\nc(2, 30, 4000)\n```\n\n-   Создайте вектор от 1 до 20.\n\n```{r}\n1:20\n```\n\n-   Создайте вектор от 20 до 1.\n\n```{r}\n20:1\n```\n\nФункция `sum()` возвращает сумму элементов вектора на входе. Посчитайте сумму первых 100 натуральных чисел (т.е. всех целых чисел от 1 до 100).\n\n```{r}\nsum(1:100)\n```\n\n-   Создайте вектор от 1 до 20 и снова до 1. Число 20 должно присутствовать только один раз!\n\n```{r}\nc(1:20, 19:1)\n```\n\n-   Создайте вектор значений 5, 4, 3, 2, 2, 3, 4, 5:\n\n```{r}\nc(5:2, 2:5)\n```\n\n-   Создайте вектор 2, 4, 6, ... , 18, 20.\n\n```{r}\nseq(2, 20, 2)\n```\n\n-   Создайте вектор 0.1, 0.2, 0.3, ..., 0.9, 1.\n\n```{r}\nseq(0.1, 1, 0.1)\n```\n\n-   2020 год -- високосный. Следующий високосный год через 4 года -- это будет 2024 год. Составьте календарь всех високосных годов XXI века, начиная с 2020 года.\n\n> 2100 год относится к XXI веку, а не к XXII.\n\n```{r}\nseq(2020, 2100, 4)\n```\n\n-   Создайте вектор, состоящий из 20 повторений \"Хэй!\".\n\n```{r}\nrep(\"Хэй!\", 20)\n```\n\n-   Как я и говорил, многие функции, работающие с одним значением на входе, так же прекрасно работают и с целыми векторами. Попробуйте посчитать квадратный корень чисел от 1 до 10 с помощью функции `sqrt()` и сохраните результат в векторе `roots`. Выведите содержание вектора `roots` в консоль.\n\n```{r}\nroots <- sqrt(1:10)\nroots\n```\n\n-   \\*Создайте вектор из одной единицы, двух двоек, трех троек, .... , девяти девяток.\n\n```{r}\nrep(1:9, 1:9)\n```\n\n### Решение заданий на векторизацию\n\n-   Создайте вектор `p`, состоящий из значений 4, 5, 6, 7, и вектор `q`, состоящий из 0, 1, 2, 3.\n\n```{r}\np <- 4:7\np\nq <- 0:3\nq\n```\n\n-   Посчитайте поэлементную сумму векторов `p` и `q`:\n\n```{r}\np + q\n```\n\n-   Посчитайте поэлементную разницу `p` и `q`:\n\n```{r}\np - q\n```\n\n-   Поделите каждый элемент вектора `p` на соответствующий ему элемент вектора `q`:\n\n> О, да, Вам нужно делить на 0!\n\n```{r}\np / q\n```\n\n-   Возведите каждый элемент вектора `p` в степень соответствующего ему элемента вектора `q`:\n\n```{r}\np ^ q\n```\n\n-   Умножьте каждое значение вектора `p` на 10.\n\n```{r}\np * 10\n```\n\n-   Создайте вектор квадратов чисел от 1 до 10:\n\n```{r}\n(1:10)^2\n```\n\n-   Создайте вектор 0, 2, 0, 4, ... , 18, 0, 20.\n\n```{r}\n1:20 * 0:1\n```\n\n-   Создайте вектор 1, 0, 3, 0, 5, ..., 17, 0, 19, 0.\n\n```{r}\n1:20 * 1:0\n```\n\n-   \\*Создайте вектор, в котором будут содержаться первые 20 степеней двойки.\n\n```{r}\n2 ^ (1:20)\n```\n\n-   \\*Создайте вектор из чисел 1, 10, 100, 1000, 10000:\n\n```{r}\n10 ^ (0:4)\n```\n\n-   \\*Посчитать сумму последовательности $\\frac{1}{1 \\cdot 2}+\\frac{1}{2 \\cdot 3}+\\frac{1}{3 \\cdot 4}+\\ldots+\\frac{1}{50 \\cdot 51}$.\n\n```{r}\nsum(1 / (1:50 * 2:51))\n```\n\n-   \\*Посчитать сумму последовательности $\\frac{1}{2^{0}}+\\frac{1}{2^{1}}+\\frac{1}{2^{2}}+\\frac{1}{2^{3}}+\\ldots \\frac{1}{2^{20}}$.\n\n```{r}\nsum(1 / 2 ^ (0:20))\n```\n\n-   \\*Посчитать сумму последовательности $1+\\frac{4}{3}+\\frac{7}{9}+\\frac{10}{27}+\\frac{13}{81}+\\ldots+\\frac{28}{19683}$.\n\n```{r}\nsum((3 * (1:10) - 2) / 3 ^ (0:9))\n```\n\n-   \\*Сколько чисел из последовательности $1+\\frac{4}{3}+\\frac{7}{9}+\\frac{10}{27}+\\frac{13}{81}+\\ldots+\\frac{28}{19683}$ больше чем 0.5?\n\n```{r}\nsum((3 * (1:10) - 2) / 3 ^ (0:9) > 0.5)\n```\n\n\n## Лекция 2: Сложные структуры {#sec-l2}\n\n- NA\n- Логические векторы\n\n```{r}\n#| echo: true\n#| eval: false\n# NA ----------------------------------------------------------------------\n\nage[3] <- NA\nage\nmean(age)\nage == NA\nNA == NA\nis.na(age)\n\nage[is.na(age)]\nage[!is.na(age)]\n\nmean(age[!is.na(age)])\nmean(age, na.rm = TRUE)\n\n# Приведение типов --------------------------------------------------------\n\nname <- c(\"Anya\", \"Tanya\", \"Vasya\", \"Petya\", \"Andrey\")\nname\nstudent <- c(TRUE, FALSE, TRUE, FALSE, TRUE)\nc(age, name, student)\n\nas.character(age)\nas.numeric(student)\nas.logical(c(1, 0, 1, 0, 1))\nas.numeric(c(\"1\", \"2\", \"tri\")) #NA!\n\nis.numeric(age)\nis.character(age)\n```\n\n\n- Матрицы\n- Списки\n- Датафреймы\n\n## Семинар 2: Сложные структуры {#sec-s2}\n\n- Задания на матрицы, списки и датафреймы\n\n## Лекция 3: Установка пакетов и импорт данных, tidyverse {#sec-l3}\n\n- установка пакетов\n- импорт данных\n- {skimr}\n- RStudio проекты\n- data.table vs tidyverse\n\n## Семинар 3: Введение в tidyverse {#sec-s3}\n\n- tidyverse intro: `select()`, `slice()`, `filter()`, `mutate()`\n\n## Лекция 4: Продвинутый tidyverse {#sec-l4}\n\n- tidyverse: аггрегация, *_join(), nested columns, `across()`, {purrr}\n\n## Семинар 4: Продвинутый tidyverse {#sec-s4}\n\n- задания на tidyverse: аггрегация, join, nested columns, `across()`\n\n\n## Лекция 5: {ggplot2} {#sec-l5}\n\n- Грамматика графики\n- Зачем нужна грамматика\n- Компоненты слоя: данные, геометрия, отображение эстетики, статистика, подгонка позиции\n- Шкалы (scales)\n- Координатные системы\n- Фасетки\n- Темы\n\n## Семинар 5: {ggplot2} {#sec-s5}\n\n- Строим графики\n\n## Дополнительная лекция: Quarto {#sec-l6}\n\n- Quarto\n\n## Дополнительный семинар: Quarto / темы по запросу {#sec-s6}\n\n- Практика Quarto\n- Дополнительные темы по запросу"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"materials.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.208","editor":"visual","theme":"cosmo","title":"Материалы курса"},"extensions":{"book":{"multiFile":true}}}}}